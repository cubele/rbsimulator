pub const WINDOW_HEIGHT: f32 = 1280.;
pub const WINDOW_WIDTH: f32 = 768.;
/// where the game is played, frame included, the top is reserved for displaying chartinfo
pub const INNER_WINDOW_PADDING_Y: f32 = (WINDOW_HEIGHT - 1024.) / 2.;
pub const INNER_WINDOW_PADDING_X: f32 = 0.;
pub const INNER_WINDOW_Y_OFFSET: f32 = -INNER_WINDOW_PADDING_Y;
pub const INNER_WINDOW_HEIGHT: f32 = 1024.;
pub const INNER_WINDOW_WIDTH: f32 = 768.;
/// real coordinates
/// 0,0 is the center of the screen
pub const INNER_WINDOW_X_MIN: f32 = -INNER_WINDOW_WIDTH / 2.;
pub const INNER_WINDOW_X_MAX: f32 = INNER_WINDOW_X_MIN + INNER_WINDOW_WIDTH;
pub const INNER_WINDOW_Y_MIN: f32 = -INNER_WINDOW_HEIGHT / 2. + INNER_WINDOW_Y_OFFSET;
pub const INNER_WINDOW_Y_MAX: f32 = INNER_WINDOW_Y_MIN + INNER_WINDOW_HEIGHT;

pub const TOP_FRAME_HEIGHT: f32 = 12.;
pub const BOTTOM_FRAME_HEIGHT: f32 = 12.;
pub const LEFT_FRAME_WIDTH: f32 = 66.;
pub const RIGHT_FRAME_WIDTH: f32 = 66.;
pub const LEFT_FRAME_BONUS_WIDTH: f32 = 8.;
pub const RIGHT_FRAME_BONUS_WIDTH: f32 = 8.;
pub const LEFT_FRAME_FULL_WIDTH: f32 = LEFT_FRAME_WIDTH + LEFT_FRAME_BONUS_WIDTH;
pub const RIGHT_FRAME_FULL_WIDTH: f32 = RIGHT_FRAME_WIDTH + RIGHT_FRAME_BONUS_WIDTH;
pub const BOTTOM_FRAME_FULL_WIDTH: f32 = INNER_WINDOW_WIDTH - LEFT_FRAME_FULL_WIDTH - RIGHT_FRAME_FULL_WIDTH;
pub const TOP_FRAME_FULL_WIDTH: f32 = INNER_WINDOW_WIDTH - LEFT_FRAME_FULL_WIDTH - RIGHT_FRAME_FULL_WIDTH;
pub const FRAME_Z: f32 = 500.0;

pub const PLAY_AREA_HEIGHT: f32 = (INNER_WINDOW_HEIGHT - TOP_FRAME_HEIGHT - BOTTOM_FRAME_HEIGHT) * HIGH_SPEED;
pub const PLAY_AREA_WIDTH: f32 = INNER_WINDOW_WIDTH - LEFT_FRAME_WIDTH - RIGHT_FRAME_WIDTH;
pub const PLAY_AREA_X_MIN: f32 = INNER_WINDOW_X_MIN + LEFT_FRAME_WIDTH;
pub const PLAY_AREA_X_MAX: f32 = INNER_WINDOW_X_MAX - RIGHT_FRAME_WIDTH;
pub const PLAY_AREA_Y_MIN: f32 = INNER_WINDOW_Y_MIN + BOTTOM_FRAME_HEIGHT;
pub const PLAY_AREA_Y_MAX: f32 = PLAY_AREA_Y_MIN + PLAY_AREA_HEIGHT;
pub const PLAY_AREA_MIDDLE_Y: f32 = PLAY_AREA_Y_MIN + PLAY_AREA_HEIGHT / 2.;
pub const SLIDE_GEN_Y: f32 = PLAY_AREA_MIDDLE_Y - OBJECT_SIZE / 2.;

pub const JUDGE_LINE_WIDTH: f32 = INNER_WINDOW_WIDTH;
pub const JUDGE_LINE_HEIGHT: f32 = 50.;
pub const JUDGE_LINE_PADDING: f32 = 110.;
pub const JUDGE_LINE_POSITION: f32 = PLAY_AREA_Y_MIN + JUDGE_LINE_PADDING;
pub const OPPONENT_JUDGE_LINE_POSITION: f32 = PLAY_AREA_Y_MAX - JUDGE_LINE_PADDING;

pub const TOP_SLOT_COUNT: u32 = 3;
pub const TOP_SLOT_COUNT_F: f32 = TOP_SLOT_COUNT as f32;
pub const TOP_SLOT_SIZE: f32 = OBJECT_SIZE;

pub const TOP_SLOT_PADDING_X: f32 = 30. + TOP_SLOT_SIZE / 2.;
pub const TOP_SLOT_START_X: f32 = PLAY_AREA_X_MIN + TOP_SLOT_PADDING_X;
pub const TOP_SLOT_END_X: f32 = PLAY_AREA_X_MAX - TOP_SLOT_PADDING_X;
pub const TOP_SLOT_SPACING: f32 = (TOP_SLOT_END_X - TOP_SLOT_START_X) / (TOP_SLOT_COUNT_F - 1.0);
pub const TOP_SLOT_PADDING_Y: f32 = 300.;
pub const TOP_SLOT_Y: f32 = PLAY_AREA_Y_MIN + TOP_SLOT_PADDING_Y;
pub const TOP_SLOT_OPPONENT_Y: f32 = PLAY_AREA_Y_MAX - TOP_SLOT_PADDING_Y;

pub const TOP_SPAWN_X_PADDING: f32 = 150.;
pub const TOP_SPAWN_X_START: f32 = PLAY_AREA_X_MIN + TOP_SPAWN_X_PADDING;
pub const TOP_SPAWN_X_END: f32 = PLAY_AREA_X_MAX - TOP_SPAWN_X_PADDING;
pub const TOP_SPAWN_X_SPACING: f32 = (TOP_SPAWN_X_END - TOP_SPAWN_X_START) / (TOP_SLOT_COUNT_F - 1.0);

pub const OBJ_TIME: f64 = 0.7;
pub const SPAWN_X_MIN: f32 = PLAY_AREA_X_MIN + OBJECT_SIZE;
pub const SPAWN_X_MAX: f32 = PLAY_AREA_X_MAX - OBJECT_SIZE;
pub const SPAWN_Y_POSITION: f32 = OPPONENT_JUDGE_LINE_POSITION - OBJECT_SIZE;
pub const OBJECT_Z: f32 = 100.;
pub const OBJECT_Z_DIFF: f32 = 1.0 / 100000.0;

pub const BOTTOM_SLOT_COUNT: u32 = 7;
pub const BOTTOM_SLOT_COUNT_F: f32 = BOTTOM_SLOT_COUNT as f32;

pub const OBJECT_SIZE: f32 = 70.;
pub const BOTTOM_SLOT_PADDING: f32 = TOP_SLOT_PADDING_X + OBJECT_SIZE / 2.;
pub const BOTTOM_SLOT_START_X: f32 = PLAY_AREA_X_MIN + BOTTOM_SLOT_PADDING;
pub const BOTTOM_SLOT_END_X: f32 = PLAY_AREA_X_MAX - BOTTOM_SLOT_PADDING;
pub const BOTTOM_SLOT_SPACING: f32 = (BOTTOM_SLOT_END_X - BOTTOM_SLOT_START_X) / (BOTTOM_SLOT_COUNT_F - 1.0);
pub const BOTTOM_SLOT_Y: f32 = JUDGE_LINE_POSITION;
pub const BOTTOM_SLOT_OPPONENT_Y: f32 = OPPONENT_JUDGE_LINE_POSITION;

pub const REFLECT_X_LEFT: f32 = PLAY_AREA_X_MIN + OBJECT_SIZE / 2.;
pub const REFLECT_X_RIGHT: f32 = PLAY_AREA_X_MAX - OBJECT_SIZE / 2.;
pub const REFLEC_PADDING: f32 = (TOP_SLOT_PADDING_Y + OBJECT_SIZE) * HIGH_SPEED;
pub const REFLECT_Y_MAX: f32 = PLAY_AREA_Y_MAX - REFLEC_PADDING;
pub const REFLECT_Y_MIN: f32 = PLAY_AREA_Y_MIN + REFLEC_PADDING;

pub const CHAIN_WIDTH: f32 = 8.;
pub const CHAIN_Z: f32 = 90.;
pub const CHAIN_Z_DIFF: f32 = 1.0 / 10000.0;

pub const SLIDE_Z: f32 = 95.;
pub const SLIDE_Z_DIFF: f32 = 1.0 / 10000.0;

// audio
pub const AUDIO_DELAY: f64 = 0.1;
pub const VOLUME_SONG: f32 = 0.10;
pub const VOLUME_SFX: f32 = 0.10;

pub const HIGH_SPEED: f32 = 2.;

pub const LO_DISP_TIME_MAX: f64 = 0.2;